generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_academies {
  id                         Int                          @id @default(autoincrement())
  created_at                 DateTime                     @default(now()) @db.Timestamptz(6)
  name                       String?
  location                   String?
  owner_name                 String?
  phone_number               String?
  description                String?
  email                      String?
  password                   String?
  amount_of_teachers         Decimal?                     @db.Decimal
  academy_type_id            Int?
  status                     academy_status?              @default(PENDING)
  sa_academy_files           sa_academy_files[]
  sa_academy_images          sa_academy_images[]
  sa_categories_on_academies sa_categories_on_academies[]
  sa_courses                 sa_courses[]
  sa_teachers                sa_teachers[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_academy_files {
  id           Int           @id @default(autoincrement())
  created_at   DateTime      @default(now()) @db.Timestamptz(6)
  file_name    String?
  file_url     String?
  is_hidden    Boolean?      @default(false)
  academy_id   Int?
  sa_academies sa_academies? @relation(fields: [academy_id], references: [id], onDelete: Cascade)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_academy_images {
  id           Int           @id @default(autoincrement())
  created_at   DateTime      @default(now()) @db.Timestamptz(6)
  file_name    String?
  academy_id   Int?
  image_url    String?
  is_main      Boolean?      @default(false)
  sa_academies sa_academies? @relation(fields: [academy_id], references: [id], onDelete: Cascade)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_admins {
  id         Int          @id @default(autoincrement())
  created_at DateTime     @default(now()) @db.Timestamptz(6)
  first_name String?
  last_name  String?
  full_name  String?
  password   String?
  email      String?
  sa_banners sa_banners[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_banners {
  id              Int        @id @default(autoincrement())
  created_at      DateTime   @default(now()) @db.Timestamptz(6)
  banner_link     String?
  open_new_window Boolean?   @default(true)
  created_by      Int?
  image_mobile    String?
  image_desktop   String?
  order_num       Decimal?   @db.Decimal
  sa_admins       sa_admins? @relation(fields: [created_by], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_carts {
  id         Int         @id @default(autoincrement())
  created_at DateTime    @default(now()) @db.Timestamptz(6)
  user_id    Int?
  course_id  Int?
  sa_courses sa_courses? @relation(fields: [course_id], references: [id], onDelete: Cascade)
  sa_users   sa_users?   @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model sa_categories {
  id                         Int                          @id @default(autoincrement())
  created_at                 DateTime                     @default(now()) @db.Timestamptz(6)
  name                       String                       @unique
  sa_categories_on_academies sa_categories_on_academies[]
  sa_courses                 sa_courses[]
  sa_sub_categories          sa_sub_categories[]
}

model sa_categories_on_academies {
  academy_id    Int
  type_id       Int
  sa_academies  sa_academies  @relation(fields: [academy_id], references: [id], map: "fk_category_to_category_2")
  sa_categories sa_categories @relation(fields: [type_id], references: [id], onDelete: NoAction)

  @@id([academy_id, type_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_course_messages {
  id               Int      @id @default(autoincrement())
  created_at       DateTime @default(now()) @db.Timestamptz(6)
  welcome_message  String?
  congrant_message String?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_courses {
  id                       Int                        @id @default(autoincrement())
  created_at               DateTime                   @default(now()) @db.Timestamptz(6)
  course_name              String?
  real_price               Decimal?                   @db.Decimal
  teacher_id               Int?
  user_id                  Int?
  thumbnail                String?
  academiy_id              Int?
  category_id              Int?
  sale_price               Decimal?                   @db.Decimal
  description              String?
  status                   course_status              @default(DRAFT)
  is_live                  Boolean                    @default(false)
  parent_id                Int?
  what_student_learn       String?
  requirements             String?
  course_target_level      course_level_target?       @default(ALL)
  subtitle                 String?
  sub_category_id          Int?
  last_reviewed_at         DateTime?
  pending_changes          Json?
  published_at             DateTime?
  review_feedback          String?
  course_change_logs       CourseChangeLog[]
  sa_carts                 sa_carts[]
  sa_academies             sa_academies?              @relation(fields: [academiy_id], references: [id])
  sa_categories            sa_categories?             @relation(fields: [category_id], references: [id], onUpdate: NoAction)
  sa_sub_categories        sa_sub_categories?         @relation(fields: [sub_category_id], references: [id], onUpdate: NoAction)
  sa_teachers              sa_teachers?               @relation(fields: [teacher_id], references: [id])
  sa_users                 sa_users?                  @relation(fields: [user_id], references: [id])
  sa_enrolled_user_courses sa_enrolled_user_courses[]
  sa_lectures              sa_lectures[]
  sa_liked_courses         sa_liked_courses[]
  sa_sections              sa_sections[]
  sa_user_courses          sa_user_courses[]
  sa_user_feadbacks        sa_user_feadbacks[]
  sa_user_payments         sa_user_payments[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_curriclum_attachments {
  id            Int                         @id @default(autoincrement())
  created_at    DateTime                    @default(now()) @db.Timestamptz(6)
  type          curriclum_attachment_types?
  link_url      String?
  name          String?
  curriclum_id  Int?
  sa_curriclums sa_curriclums?              @relation(fields: [curriclum_id], references: [id], onDelete: Cascade)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_curriclums {
  id                       Int                        @id(map: "sa_curriclum_pkey") @default(autoincrement())
  created_at               DateTime                   @default(now()) @db.Timestamptz(6)
  section_id               Int?
  type                     curriclum_types?
  title                    String?
  description              String?
  video_link               String?
  article                  String?
  order_num                Decimal?                   @db.Decimal
  sa_curriclum_attachments sa_curriclum_attachments[]
  sa_sections              sa_sections?               @relation(fields: [section_id], references: [id], map: "sa_curriclum_section_id_fkey")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_lecture_files {
  id          Int          @id @default(autoincrement())
  created_at  DateTime     @default(now()) @db.Timestamptz(6)
  file_name   String?
  file_url    String?
  lecture_id  Int?
  sa_lectures sa_lectures? @relation(fields: [lecture_id], references: [id], onDelete: Cascade)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_lecture_progress {
  id                Int          @id @default(autoincrement())
  created_at        DateTime     @default(now()) @db.Timestamptz(6)
  progress          Float?       @db.Real
  lecture_id        Int?
  user_id           Int?
  last_watched_date DateTime?    @db.Timestamptz(6)
  sa_lectures       sa_lectures? @relation(fields: [lecture_id], references: [id], onDelete: Cascade)
  sa_users          sa_users?    @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sa_lectures {
  id                       Int                        @id @default(autoincrement())
  created_at               DateTime                   @default(now()) @db.Timestamptz(6)
  name                     String?
  description              String?
  course_id                Int?
  lecture_main_video       String?
  is_public                Boolean?                   @default(false)
  order_num                Decimal?                   @db.Decimal
  sa_lecture_files         sa_lecture_files[]
  sa_lecture_progress      sa_lecture_progress[]
  sa_courses               sa_courses?                @relation(fields: [course_id], references: [id], onUpdate: NoAction)
  sa_user_lecture_progress sa_user_lecture_progress[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_liked_courses {
  id         Int         @id @default(autoincrement())
  created_at DateTime    @default(now()) @db.Timestamptz(6)
  user_id    Int?        @unique
  course_id  Int?
  sa_courses sa_courses? @relation(fields: [course_id], references: [id], onDelete: Cascade)
  sa_users   sa_users?   @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_sections {
  id            Int             @id @default(autoincrement())
  created_at    DateTime        @default(now()) @db.Timestamptz(6)
  order_num     Decimal?        @db.Decimal
  updated_at    DateTime?       @db.Timestamptz(6)
  status        course_status?
  course_id     Int?
  name          String?
  sa_curriclums sa_curriclums[]
  sa_courses    sa_courses?     @relation(fields: [course_id], references: [id], onDelete: Cascade)
}

model sa_sub_categories {
  id             Int            @id @default(autoincrement())
  created_at     DateTime       @default(now()) @db.Timestamptz(6)
  name           String?
  parent_type_id Int?
  sa_courses     sa_courses[]
  sa_categories  sa_categories? @relation(fields: [parent_type_id], references: [id], onDelete: Cascade)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_teacher_files {
  id          Int          @id @default(autoincrement())
  created_at  DateTime     @default(now()) @db.Timestamptz(6)
  file_name   String?
  file_url    String?
  teacher_id  Int?
  sa_teachers sa_teachers? @relation(fields: [teacher_id], references: [id], onDelete: Cascade)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_teachers {
  id               Int                @id @default(autoincrement())
  created_at       DateTime           @default(now()) @db.Timestamptz(6)
  first_name       String?
  last_name        String?
  email            String?            @unique
  full_name        String?
  academy_id       Int?
  image            String?
  user_id          Int?               @unique
  description      String?
  headline         String?
  website_url      String?
  instagram_url    String?
  facebook_url     String?
  youtube_url      String?
  sa_courses       sa_courses[]
  sa_teacher_files sa_teacher_files[]
  sa_academies     sa_academies?      @relation(fields: [academy_id], references: [id])
  sa_users         sa_users?          @relation(fields: [user_id], references: [id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_user_courses {
  id         Int         @id @default(autoincrement())
  created_at DateTime    @default(now()) @db.Timestamptz(6)
  user_id    Int?
  course_id  Int?
  sa_courses sa_courses? @relation(fields: [course_id], references: [id], onDelete: Cascade)
  sa_users   sa_users?   @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_user_feadbacks {
  id         Int         @id @default(autoincrement())
  created_at DateTime    @default(now()) @db.Timestamptz(6)
  user_id    Int?
  course_id  Int?
  content    String?
  rate       Int?        @db.SmallInt
  sa_courses sa_courses? @relation(fields: [course_id], references: [id], onDelete: Cascade)
  sa_users   sa_users?   @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_user_lecture_progress {
  id           Int          @id @default(autoincrement())
  created_at   DateTime     @default(now()) @db.Timestamptz(6)
  current_time Float?       @db.Real
  user_id      Int?
  lecture_id   Int?
  is_completed Boolean?     @default(false)
  updated_at   DateTime?    @db.Timestamptz(6)
  sa_lectures  sa_lectures? @relation(fields: [lecture_id], references: [id], onDelete: Cascade)
  sa_users     sa_users?    @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_user_payments {
  id         Int         @id @default(autoincrement())
  created_at DateTime    @default(now()) @db.Timestamptz(6)
  user_id    Int?
  course_id  Int?
  sa_courses sa_courses? @relation(fields: [course_id], references: [id])
  sa_users   sa_users?   @relation(fields: [user_id], references: [id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_users {
  id                              Int                        @id @default(autoincrement())
  created_at                      DateTime                   @default(now()) @db.Timestamptz(6)
  full_name                       String?
  first_name                      String?
  last_name                       String?
  email                           String?                    @unique
  otp                             String?
  is_verified                     Boolean?                   @default(false)
  password                        String?
  avatar                          String?
  google_id                       String?
  telegram_id                     String?
  otp_expires_at                  DateTime?                  @db.Timestamptz(6)
  password_reset_token            String?
  password_reset_token_expires_at DateTime?                  @db.Timestamptz(6)
  sa_carts                        sa_carts[]
  sa_courses                      sa_courses[]
  sa_enrolled_user_courses        sa_enrolled_user_courses[]
  sa_lecture_progress             sa_lecture_progress[]
  sa_liked_courses                sa_liked_courses?
  sa_teachers                     sa_teachers?
  sa_user_courses                 sa_user_courses[]
  sa_user_feadbacks               sa_user_feadbacks[]
  sa_user_lecture_progress        sa_user_lecture_progress[]
  sa_user_payments                sa_user_payments[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sa_enrolled_user_courses {
  id         Int         @id @default(autoincrement())
  created_at DateTime    @default(now()) @db.Timestamptz(6)
  course_id  Int?
  user_id    Int?
  expires_at DateTime?   @db.Timestamptz(6)
  sa_courses sa_courses? @relation(fields: [course_id], references: [id], onDelete: Cascade)
  sa_users   sa_users?   @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model CourseChangeLog {
  id              Int             @id @default(autoincrement())
  course_id       Int
  change_type     ChangeType
  field           String
  old_value       Json?
  new_value       Json?
  requires_review Boolean
  status          ChangeLogStatus @default(PENDING)
  created_at      DateTime        @default(now())
  sa_courses      sa_courses      @relation(fields: [course_id], references: [id], onDelete: Cascade)
}

/// This enum is commented in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
enum academy_status {
  PENDING
  CONFIRMED
  SUSPENDED
}

/// This enum is commented in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
enum course_level_target {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  ALL
}

enum course_status {
  DRAFT
  PENDING_REVIEW
  PUBLISHED
  REJECTED
  UPDATE_PENDING_REVIEW
}

/// This enum is commented in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
enum curriclum_attachment_types {
  EXTERNAL_LINK
  FILE
}

/// This enum is commented in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
enum curriclum_types {
  VIDEO
  ARTICLE
  QUIZ
}

enum ChangeType {
  CONTENT_UPDATE
  VIDEO_UPLOAD
  PRICING_CHANGE
  VISIBILITY_CHANGE
  OTHER
}

enum ChangeLogStatus {
  PENDING
  APPROVED
  REJECTED
}
