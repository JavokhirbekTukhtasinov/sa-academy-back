# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  id: Int!
  created_at: Date!
  name: String!
  sa_sub_categories: [SubCategory!]
  sa_courses: [Course!]
  sa_academies: [Academy!]
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

type SubCategory {
  id: Int!
  created_at: Date!
  name: String!
  parent_type_id: Int
  sa_categories: Category
}

type PaginationMeta {
  total: Int!
  lastPage: Int!
  currentPage: Int!
  perPage: Int!
  prev: Int
  next: Int
}

type Lecture {
  """Example field (placeholder)"""
  exampleField: Int!
}

type CreateLectureResponse {
  """lecture id"""
  id: Int!
  key: ID
}

type Teacher {
  """Example field (placeholder)"""
  id: Int!

  """Example field (placeholder)"""
  created_at: DateTime!

  """Example field (placeholder)"""
  first_name: String!

  """Example field (placeholder)"""
  last_name: String!

  """Example field (placeholder)"""
  email: String!

  """Example field (placeholder)"""
  full_name: String

  """Example field (placeholder)"""
  is_verified: String!

  """Example field (placeholder)"""
  otp: String!

  """Example field (placeholder)"""
  academy_id: Int!

  """Example field (placeholder)"""
  image: String!
  sa_academies: Academy
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  id: Int!
  name: String!
  email: String!
}

type UserCourses {
  id: Int!
  created_at: Date!
  user_id: Int
  course_id: Int
  sa_courses: Course
  sa_users: User
}

type UserFeadbacks {
  id: Int!
  created_at: Date!
  user_id: Int
  course_id: Int
  content: String
  rate: Int
  sa_courses: Course
  sa_users: User
}

type UserPayment {
  id: Int!
  created_at: Date!
  user_id: Int
  course_id: Int
  sa_courses: Course
  sa_users: User
}

type Course {
  id: Int!
  created_at: Time!
  course_name: String!
  real_price: Int!
  sale_price: Int!
  teacher_id: Int
  user_id: Int
  thumbnail: String
  academiy_id: Int
  category_id: Int
  sa_academies: Academy
  sa_categories: Category
  sa_teachers: Teacher
  sa_users: User
  sa_lectures: Lecture
  status: CourseStatus!
  sa_user_courses: [UserCourses!]
  sa_user_feadbacks: [UserFeadbacks!]
  sa_user_payments: [UserPayment!]
}

"""
A time string at UTC, such as 10:15:30Z, compliant with the `full-time` format outlined in section 5.6 of the RFC 3339profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Time

enum CourseStatus {
  DRAFT
  SUBMITTED_FOR_REVIEW
  APPROVED
  REJECTED
}

type PaginatedCourses {
  data: [Course!]!
  meta: PaginationMeta!
}

type AcademyType {
  id: Int
  created_at: DateTime

  """Academy type name"""
  name: String!
  sa_academies: [Academy!]
}

type Academy {
  id: Int
  created_at: DateTime

  """Academy name"""
  name: ID!

  """Academy location"""
  location: String!

  """Academy owner name"""
  owner_name: String!

  """Academy phone number"""
  phone_number: String!

  """Academy description"""
  description: String!

  """Academy email"""
  email: String!

  """Academy amount of teachers"""
  amount_of_teachers: Int

  """Academy amount of students"""
  academy_type_id: Int

  """Academy status"""
  status: AcademyStatus
  sa_academy_types: AcademyType
  sa_academy_files: [AcademyFile!]
  sa_academy_images: [AcademyImage!]
  sa_courses: [Course!]
  sa_teachers: [Teacher!]
}

enum AcademyStatus {
  PENDING
  CONFIRMED
  SUSPENDED
}

type AcademyFile {
  id: Int!
  created_at: DateTime!
  file_name: Float!
  file_url: String!
  is_hidden: Boolean
  academy_id: Int
  sa_academies: Academy
}

type AcademyImage {
  id: Int!
  created_at: DateTime!
  file_name: String!
  image_url: String!
  is_main: Boolean
  academy_id: Int
  sa_academies: Academy
}

"""academy categories"""
type AcademyCategories {
  id: BigInt!
  created_at: DateTime!
  name: String!
  sa_academies: [Academy!]
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

type Auth {
  """Example field (placeholder)"""
  exampleField: Int!
}

type verifyOTPresponse {
  message: String!
}

type SignUpresponse {
  message: String!
}

type userLoginResponse {
  access_token: String!
  refresh_token: String!
  user: userUnion!
}

union userUnion = User | Teacher | Academy

type createAcademyInputResponse {
  message: String!
}

type CreateTeacherResponse {
  message: String
}

type CreateCourseResponse {
  message: String
  course_id: Int!
}

"""lectures attachements"""
type Attachment {
  id: Int!
  created_at: Date!
  file_name: String!
  file_url: String!
  lecture_id: Int!
}

type Admin {
  id: Int!
}

type Banner {
  """Example field (placeholder)"""
  id: Int!
  banner_link: String
  open_new_window: Boolean
  created_by: Int
  image_mobile: String
  image_desktop: String
  created_at: Date!
  sa_admins: Admin
}

type Query {
  auth(id: Int!): Auth!
  users: [User!]!
  user(id: Int!): User!
  academies: [Academy!]!
  academy(id: Int!): Academy!
  academyCategories: [AcademyCategories!]!
  teachers: [Teacher!]!
  teacher(id: Int!): Teacher!
  getTeacherCourses(page: Int, perPage: Int, search: String): PaginatedCourses!
  course(id: Int!): Course!
  categories: [Category!]!
  subCategories(id: Int): [SubCategory!]!
  lectures: [Lecture!]!
  lecture(id: Int!): Lecture!
  banners: [Banner!]!
  banner(id: Int!): Banner!
}

type Mutation {
  signup(createAuthInput: SignUpInput!): SignUpresponse!
  verifyOTP(verifyOTPInput: verifyOTPInput!): verifyOTPresponse!
  login(loginInput: LoginInput!): userLoginResponse!
  updateAuth(updateAuthInput: UpdateAuthInput!): Auth!
  removeAuth(id: Int!): Auth!
  refreshToken: String!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User!
  createAcademy(createAcademyInput: CreateAcademyInput!): createAcademyInputResponse!
  updateAcademy(updateAcademyInput: UpdateAcademyInput!): Academy!
  removeAcademy(id: Int!): Academy!
  createTeacher(createTeacherInput: CreateTeacherInput!): CreateTeacherResponse!
  updateTeacher(updateTeacherInput: UpdateTeacherInput!): Teacher!
  removeTeacher(id: Int!): Teacher!
  createCourse(createCourseInput: CreateCourseInput!): CreateCourseResponse!
  updateCourse(updateCourseInput: UpdateCourseInput!): Course!
  removeCourse(id: Int!): Course!
  createLecture(input: CreateLectureInput!): CreateLectureResponse!
  updateLecture(updateLectureInput: UpdateLectureInput!): Lecture!
  removeLecture(id: Int!): Lecture!
  createBanner(input: CreateBannerInput!): Banner!
  updateBanner(updateBannerInput: UpdateBannerInput!): Banner!
  removeBanner(id: Int!): Banner!
}

input SignUpInput {
  email: String!
  password: String!
  first_name: String!
  last_name: String!
}

input verifyOTPInput {
  otp: Int!
  email: String!
}

input LoginInput {
  email: String!
  password: String!

  """send login role(ADMIN, TEACHER, STUDENT, ACADEMY)"""
  role: String!
}

input UpdateAuthInput {
  """Example field (placeholder)"""
  email: ID

  """Example field (placeholder)"""
  password: ID

  """Example field (placeholder)"""
  role: ID
  id: Int!
}

input UpdateUserInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateAcademyInput {
  """Academy name"""
  name: String!

  """Academy location"""
  location: String!

  """Academy owner name"""
  owner_name: String!

  """Academy phone number"""
  phone_number: String!

  """Academy description"""
  description: String!

  """Academy email"""
  email: String!

  """Number of teachers in the academy"""
  amount_of_teachers: Int

  """Academy type ID (FK)"""
  academy_type_id: Int

  """Optional multiple academy images"""
  sa_academy_images: [Upload!]

  """Optional multiple academy files"""
  sa_academy_files: [Upload!]
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UpdateAcademyInput {
  """Academy name"""
  name: String

  """Academy location"""
  location: String

  """Academy owner name"""
  owner_name: String

  """Academy phone number"""
  phone_number: String

  """Academy description"""
  description: String

  """Academy email"""
  email: String

  """Number of teachers in the academy"""
  amount_of_teachers: Int

  """Academy type ID (FK)"""
  academy_type_id: Int

  """Optional multiple academy images"""
  sa_academy_images: [Upload!]

  """Optional multiple academy files"""
  sa_academy_files: [Upload!]
  id: Int!
}

input CreateTeacherInput {
  """First name"""
  first_name: String!
  last_name: String!
  full_name: String
  email: String!
  description: String
  password: String!

  """Profile image file"""
  image: Upload!

  """Phone number"""
  phone_number: String

  """Optional multiple teacher files"""
  teacher_files: [Upload!]

  """Academy ID as stringified BigInt"""
  academy_id: Int
}

input UpdateTeacherInput {
  """First name"""
  first_name: String
  last_name: String
  full_name: String
  email: String
  description: String
  password: String

  """Profile image file"""
  image: Upload

  """Phone number"""
  phone_number: String

  """Optional multiple teacher files"""
  teacher_files: [Upload!]

  """Academy ID as stringified BigInt"""
  academy_id: Int
  id: Int!
}

input CreateCourseInput {
  course_name: String
  real_price: String
  sale_price: String
  description: String

  """Teacher ID as stringified BigInt"""
  teacher_id: Int

  """Optional user ID as stringified BigInt"""
  user_id: Int

  """Thumbnail image file"""
  thumbnail: Upload!

  """Academy ID as stringified BigInt"""
  academiy_id: Int

  """Course type ID as stringified BigInt"""
  course_type_id: Int!
}

input UpdateCourseInput {
  course_name: String
  real_price: String
  sale_price: String
  description: String

  """Teacher ID as stringified BigInt"""
  teacher_id: Int

  """Optional user ID as stringified BigInt"""
  user_id: Int

  """Thumbnail image file"""
  thumbnail: Upload

  """Academy ID as stringified BigInt"""
  academiy_id: Int

  """Course type ID as stringified BigInt"""
  course_type_id: Int
  id: Int!
}

input CreateLectureInput {
  """Example field (placeholder)"""
  name: String!
  description: String!
  course_id: Int!
  video_key: String
  attachmentIds: [Int!]
}

input UpdateLectureInput {
  name: String
  description: String
  course_id: Int
  video_key: String
  attachmentIds: [Int!]
  id: Int!
}

input CreateBannerInput {
  image_desktop: Upload!
  image_mobile: Upload!
  banner_link: String!
  open_new_window: Boolean = true
}

input UpdateBannerInput {
  image_desktop: Upload
  image_mobile: Upload
  banner_link: String
  open_new_window: Boolean = true
  id: Int!
}